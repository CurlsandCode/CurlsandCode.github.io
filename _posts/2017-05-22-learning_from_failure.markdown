---
layout: post
title:  Learning from failure
date:   2017-05-22 05:29:40 +0000
---


When I first looked over the projects for this course, I was pretty initmedated on whether or not I could learn enough to actually complete them. As I started to make my way through the OOP Ruby section and inched closer and closer to the final project for that section I found myself wondering if I knew enough to actually do the CLI data gem project. I found comfort in reading others students blog post about how they too doubted that they were ready to do their projects, but then later on found themseleves capable of coding up something they were proud of. So when the time finally came for me to start working on my project, I felt like I had a good idea and enough resources at my disposal to get it done. My idea was to use Yelp's API and create and Escape Room finder. I am a bit of an escape room junkie and I love discovering new escape rooms. It seemed like a great gem idea and challenging enough, since I've never actually used an API before.

I decided the first thing that I would do is watch Avi's walk through video and get a feel for how to go about creating a gem. I started to code along with Avi and about 17 minutes into the video I hit a snag. I coudlnt for the life of me figure out what I did wrong, so I erased eveything and started the video over, and again at around the 17 minute mark all my progress came to a screeching halt. I wanted to figure out what I was doing wrong, but I had a meeting with my learn coach schedule, so I had to press pause on my gem issues, but before that I put a quick message in the slack channel asking for help. I got a response, but they asked me to link my github repro, which I had not yet created, because I was just coding along with avi to get the hang of creating a gem, before I started my real project. So I tried to quickly put the code on github and just my luck I kept getting an error on my command line saying that I wasn't authorized to push to my repro. I tried troubleshooting github with my learn coach, but it was pretty late at night on my side of the world and I figured it would be better to approach things with fresh eyes in the morning. Needless to say the next morning fresh eyes did help my github problem, but it didnt help the issue I was having with the gem. I decide to reach out using the ask a question feature for help, but there was no one avaliable for a screenshare and also learn experts arent allowed to help at all with the gem, you can only get help from the learn instructor for that project. Which I understand the reason behind that, but man is it inconvient when you are in another country 14 hours ahead of everyone in the United States trying to get something done and you can only ask ONE person. So I had no choice but to try to schedule a one on one session with my learn instructor, unfortunately for me the next avaliable one on one session was Wednesday, 4 days later. In the mean time while I waited I continued to bang my head against the keyboard, search stackoverflow and try as many different things as possible to fix the error I was getting with my gem. On Tuesday, I had a break through...I watched Avi's video for the 7th time and finally saw what I did wrong.** I put my cli.rb file in my lib folder, instead of puting my my cli.rb file in my gem_name_folder inside the lib folder, if that makes sense.** I lost 4 days behind the stupidest mistake. So the first lesson I learned: 

**1.Make sure all your files are in the right folders!**

After that I was ready to hit the ground running, I watched Avi's video about 8 times, I had studied the code of a ton of CLI gem repos. I was ready! I went over to Yelp to get access to their API. I created a developer account, and created a project, and Yelp promptly gave me a client_id and client_secret. I read the documentation and learned that I was to use these to send a POST request to get an access token which would then allow me to use Yelp's API. Now this information was new, because when I read in the past how developers used Yelps API, it was a different process, but now that Yelp's API has changed and become Yelp Fusion, they have a different process. A process I am NOT a fan of by the way. "Make APIs easy to use again!" Any how after trying a few things to get my API token, I realized I have no idea how to make a POST request in Ruby. So I went to my old friend Codecademy for help. I did their Learn API's track and worked through their Learn OAuth2 with the GitHub API track, since Yelp Fusion also uses OAuth2. I learned a lot, but even following codecademy's step by step directions, I once again hit a snag. I could get my POST request to work. 2 days passed by and through a bit of research I learned about POSTMAN. A Little About Postman. Postman is a Google Chrome app for interacting with HTTP APIs. It presents you with a friendly GUI for constructing requests and reading responses. So the second lesson I learned : 

**2. Postman is a super easy way to send POST and test GET request to an API. It makes it easy to know where to put all the things an API requires in a request, such as client_id,client_secret_, grant_type, and authorization header. **

Finally I have solved that problem and kind of had an idea of how I was going to use the Yelp Fusion API in my project. I ran a few test GET calls in Postman and everything seem to be going ok. I set up my project and started trying to get things working, I got nothing but 503 error messages back from Yelp and I could figure out why. So I decided to try out the Yellow Pages API. Still I could not get any data only 503 error messages, even though in postman my calls return the data I was looking for. So I decide to try to scrape yelp instead. Even though I gave up on the API I still learned something new:

**** 3. I learned how to hide API keys using enviornmental variables, which was useful for the future because no matter what API you are working with your keys are suppose to stay private. **

I started trying to scrape Yellow pages, but I ran into a host of problems, the results on yellow pages some times included results with the word escape in it, like "Escape Fantasy Spa ", and I didnt quite know how to filter the results and also when I tried to iterate over the data and make objects, I kept getting a NoMethod error, for .each, .collect, .map. I couldnt get anything working. So the last lesson I learned was **knowing when to call it quits.** I think my project idea was a bit too ambitious for my current skill level. I just dont have the knowledge or support right now to get it done, but that's not to say that I wont go back and try again later after I've learned a bit more. Also I am happy with how my Cli gem did turn out.  I am glad that despite the last 10 days of banging my head against the keyboard fighting off errors and succumbing to failure, that I learn through the highs and lows, this is still something I want. As horrible as it felt to not know why my code wasnt working and not having anyone I could immediately ask for help, it still felt 10 times more fulfilling to be challenged and know that with each mistake I was learning. Now that I know better, I'll do better.
